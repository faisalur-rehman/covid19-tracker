{"version":3,"sources":["components/Cards/Cards.module.css","components/Chart/Chart.js","components/Cards/Cards.js","components/Header/download.png","components/Header/Header.js","api/index.js","components/CountryPicker/CountryPicker.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js","App.module.css","components/CountryPicker/CountryPicker.module.css","components/Footer/Footer.module.css","components/Chart/Chart.module.css","components/Header/Header.module.css"],"names":["module","exports","Chart","confirmed","deaths","recovered","country","data","labels","datasets","label","backgroundColor","hoverBackgroundColor","className","styles","chart","options","legend","display","title","text","Cards","lastUpdate","Grid","container","item","xs","sm","md","spacing","Card","variant","CardContent","content","Typography","color","gutterBottom","start","end","parseInt","duration","separator","Date","toDateString","Header","src","Logo","alt","fetchData","a","url","fetch","json","fetchCountries","countries","CountryPicker","handleCountryChange","useState","setCountries","useEffect","map","prev","name","dataFetched","FormControl","form","NativeSelect","onChange","e","target","value","formControl","Footer","footer","App","setConfirmed","setDeaths","setRecovered","setLastUpdate","setCountry","getData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c00695e7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__4Ot8T\",\"confirmed\":\"Cards_confirmed__2rIgr\",\"deaths\":\"Cards_deaths__123Yf\",\"recovered\":\"Cards_recovered__mEMnm\"};","import React from \"react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\nfunction Chart({ confirmed, deaths, recovered, country }) {\r\n  const data = {\r\n    labels: [\"Infected\", \"Deaths\", \"Recovered\"],\r\n    datasets: [\r\n      {\r\n        label: \"People\",\r\n        data: [confirmed, deaths, recovered],\r\n        backgroundColor: [\"yellow\", \"red\", \"green\"],\r\n        hoverBackgroundColor: [\r\n          \"rgb(238, 238, 78)\",\r\n          \" rgb(241, 60, 60)\",\r\n          \"rgb(45, 146, 45)\",\r\n        ],\r\n        //barThickness: 140,\r\n      },\r\n    ],\r\n  };\r\n  return (\r\n    <div className={styles.chart}>\r\n      <Bar\r\n        data={data}\r\n        options={{\r\n          legend: { display: false },\r\n          title: { display: true, text: `Current State in ${country}` },\r\n        }}\r\n        //width={900}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import { Card, CardContent, Grid, Typography } from \"@material-ui/core\";\r\nimport CountUp from \"react-countup\";\r\nimport React from \"react\";\r\nimport styles from \"./Cards.module.css\";\r\n\r\nconst Cards = ({ confirmed, deaths, recovered, lastUpdate }) => {\r\n  if (!confirmed || !deaths || !recovered) {\r\n    return \"Loading...\";\r\n  }\r\n  return (\r\n    <Grid container className={styles.container}>\r\n      <Grid item xs={false} sm={1} md={2} />\r\n      <Grid item container xs={12} sm={10} md={8} spacing={4}>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card variant=\"outlined\" className={styles.confirmed}>\r\n            <CardContent className={styles.content}>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                Total Cases\r\n              </Typography>\r\n\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                <CountUp\r\n                  start={0}\r\n                  end={parseInt(confirmed)}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                <span>Last Updated</span>\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card variant=\"outlined\" className={styles.deaths}>\r\n            <CardContent>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                Total Deaths:\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                <CountUp\r\n                  start={0}\r\n                  end={parseInt(deaths)}\r\n                  duration={2.5}\r\n                  separator=\",\"\r\n                />\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                Last Updated\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n        <Grid item xs={12} sm={6} md={4}>\r\n          <Card variant=\"outlined\" className={styles.recovered}>\r\n            <CardContent>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                Total Recovered:\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                <CountUp start={0} end={parseInt(recovered)} separator=\",\" />\r\n              </Typography>\r\n              <Typography variant=\"h6\" color=\"textPrimary\" gutterBottom>\r\n                Last Updated\r\n              </Typography>\r\n              <Typography color=\"textPrimary\" gutterBottom>\r\n                {new Date(lastUpdate).toDateString()}\r\n              </Typography>\r\n            </CardContent>\r\n          </Card>\r\n        </Grid>\r\n      </Grid>\r\n      <Grid item xs={false} sm={1} md={2} />\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Cards;\r\n","export default __webpack_public_path__ + \"static/media/download.afc0e312.png\";","import React from \"react\";\r\nimport styles from \"./Header.module.css\";\r\nimport Logo from \"./download.png\";\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 className={styles.title}>\r\n        C\r\n        <span>\r\n          <img src={Logo} alt=\"Covid Icon\" />\r\n        </span>\r\n        VID19\r\n      </h1>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const fetchData = async (country) => {\r\n  let url = \"\";\r\n  if (country !== \"Global\") {\r\n    url = `https://covid19.mathdro.id/api/countries/${country}`;\r\n  } else {\r\n    url = `https://covid19.mathdro.id/api`;\r\n  }\r\n  const data = await fetch(url);\r\n\r\n  const { confirmed, recovered, deaths, lastUpdate } = await data.json();\r\n  return { confirmed, recovered, deaths, lastUpdate };\r\n};\r\nexport const fetchCountries = async () => {\r\n  const data = await fetch(\"https://covid19.mathdro.id/api/countries\");\r\n  const { countries } = await data.json();\r\n  return countries;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport { fetchCountries } from \"../../api\";\r\nimport styles from \"./CountryPicker.module.css\";\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [search, setSearch] = useState(\"\");\r\n  const [countries, setCountries] = useState([]);\r\n  useEffect(() => {\r\n    const dataFetched = async () => {\r\n      const allCountries = await fetchCountries();\r\n      allCountries.map((country) =>\r\n        setCountries((prev) => [...prev, country.name])\r\n      );\r\n    };\r\n    dataFetched();\r\n  }, []);\r\n\r\n  const handleCountry = (e) => {\r\n    handleCountryChange(e.target.value);\r\n  };\r\n  const handleSearch = ({ target }) => {\r\n    setSearch(target.value);\r\n  };\r\n  return (\r\n    <FormControl className={styles.form}>\r\n      <NativeSelect onChange={handleCountry} className={styles.formControl}>\r\n        <option value=\"Global\">Global</option>\r\n\r\n        {countries.map((country) => (\r\n          <option key={country} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport styles from \"./Footer.module.css\";\r\nconst Footer = () => {\r\n  return (\r\n    <footer className={styles.footer}>\r\n      <h1 className={styles.title}>\r\n        Made with️ ❤️ in Pakistan © 2020 Bootcamp\r\n      </h1>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import \"./App.module.css\";\nimport { useEffect, useState } from \"react\";\nimport Chart from \"./components/Chart/Chart\";\nimport Cards from \"./components/Cards/Cards\";\nimport Header from \"./components/Header/Header\";\nimport CountryPicker from \"./components/CountryPicker/CountryPicker\";\nimport { fetchData } from \"./api\";\nimport styles from \"./App.module.css\";\nimport Footer from \"./components/Footer/Footer\";\n\nfunction App() {\n  const [confirmed, setConfirmed] = useState(0);\n  const [deaths, setDeaths] = useState(0);\n  const [recovered, setRecovered] = useState(0);\n  const [lastUpdate, setLastUpdate] = useState(\"\");\n  const [country, setCountry] = useState(\"Global\");\n  useEffect(() => {\n    const getData = async () => {\n      const { confirmed, recovered, deaths, lastUpdate } = await fetchData(\n        country\n      );\n      setConfirmed(confirmed.value);\n      setDeaths(deaths.value);\n      setRecovered(recovered.value);\n      setLastUpdate(lastUpdate);\n    };\n    getData();\n  }, [country]);\n\n  const handleCountryChange = (value) => {\n    setCountry(value);\n  };\n  return (\n    <div className={styles.App}>\n      <Header />\n      <Cards\n        confirmed={confirmed}\n        deaths={deaths}\n        recovered={recovered}\n        lastUpdate={lastUpdate}\n      />\n      <CountryPicker handleCountryChange={handleCountryChange} />\n      <Chart\n        confirmed={confirmed}\n        deaths={deaths}\n        recovered={recovered}\n        country={country}\n      />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3f8PT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__3GbAx\",\"form\":\"CountryPicker_form__2w3gF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Footer_title__2fqVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chart\":\"Chart_chart__3smJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Header_title__2tWoD\"};"],"sourceRoot":""}